{"version":3,"file":"p-map.js","sources":["../node_modules/indent-string/index.js","../node_modules/clean-stack/index.js","../node_modules/aggregate-error/index.js","../node_modules/p-map/index.js"],"sourcesContent":["'use strict';\n\nmodule.exports = (string, count = 1, options) => {\n\toptions = {\n\t\tindent: ' ',\n\t\tincludeEmptyLines: false,\n\t\t...options\n\t};\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (typeof options.indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof options.indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = options.includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, options.indent.repeat(count));\n};\n","'use strict';\nconst os = require('os');\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/;\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:babel-polyfill|pirates)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/;\nconst homeDir = typeof os.homedir === 'undefined' ? '' : os.homedir();\n\nmodule.exports = (stack, options) => {\n\toptions = Object.assign({pretty: false}, options);\n\n\treturn stack.replace(/\\\\/g, '/')\n\t\t.split('\\n')\n\t\t.filter(line => {\n\t\t\tconst pathMatches = line.match(extractPathRegex);\n\t\t\tif (pathMatches === null || !pathMatches[1]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst match = pathMatches[1];\n\n\t\t\t// Electron\n\t\t\tif (\n\t\t\t\tmatch.includes('.app/Contents/Resources/electron.asar') ||\n\t\t\t\tmatch.includes('.app/Contents/Resources/default_app.asar')\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !pathRegex.test(match);\n\t\t})\n\t\t.filter(line => line.trim() !== '')\n\t\t.map(line => {\n\t\t\tif (options.pretty) {\n\t\t\t\treturn line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));\n\t\t\t}\n\n\t\t\treturn line;\n\t\t})\n\t\t.join('\\n');\n};\n","'use strict';\nconst indentString = require('indent-string');\nconst cleanStack = require('clean-stack');\n\nconst cleanInternalStack = stack => stack.replace(/\\s+at .*aggregate-error\\/index.js:\\d+:\\d+\\)?/g, '');\n\nclass AggregateError extends Error {\n\tconstructor(errors) {\n\t\tif (!Array.isArray(errors)) {\n\t\t\tthrow new TypeError(`Expected input to be an Array, got ${typeof errors}`);\n\t\t}\n\n\t\terrors = [...errors].map(error => {\n\t\t\tif (error instanceof Error) {\n\t\t\t\treturn error;\n\t\t\t}\n\n\t\t\tif (error !== null && typeof error === 'object') {\n\t\t\t\t// Handle plain error objects with message property and/or possibly other metadata\n\t\t\t\treturn Object.assign(new Error(error.message), error);\n\t\t\t}\n\n\t\t\treturn new Error(error);\n\t\t});\n\n\t\tlet message = errors\n\t\t\t.map(error => {\n\t\t\t\t// The `stack` property is not standardized, so we can't assume it exists\n\t\t\t\treturn typeof error.stack === 'string' ? cleanInternalStack(cleanStack(error.stack)) : String(error);\n\t\t\t})\n\t\t\t.join('\\n');\n\t\tmessage = '\\n' + indentString(message, 4);\n\t\tsuper(message);\n\n\t\tthis.name = 'AggregateError';\n\n\t\tObject.defineProperty(this, '_errors', {value: errors});\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const error of this._errors) {\n\t\t\tyield error;\n\t\t}\n\t}\n}\n\nmodule.exports = AggregateError;\n","'use strict';\nconst AggregateError = require('aggregate-error');\n\nmodule.exports = async (\n\titerable,\n\tmapper,\n\t{\n\t\tconcurrency = Infinity,\n\t\tstopOnError = true\n\t} = {}\n) => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (typeof mapper !== 'function') {\n\t\t\tthrow new TypeError('Mapper function is required');\n\t\t}\n\n\t\tif (!(typeof concurrency === 'number' && concurrency >= 1)) {\n\t\t\tthrow new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${concurrency}\\` (${typeof concurrency})`);\n\t\t}\n\n\t\tconst ret = [];\n\t\tconst errors = [];\n\t\tconst iterator = iterable[Symbol.iterator]();\n\t\tlet isRejected = false;\n\t\tlet isIterableDone = false;\n\t\tlet resolvingCount = 0;\n\t\tlet currentIndex = 0;\n\n\t\tconst next = () => {\n\t\t\tif (isRejected) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextItem = iterator.next();\n\t\t\tconst i = currentIndex;\n\t\t\tcurrentIndex++;\n\n\t\t\tif (nextItem.done) {\n\t\t\t\tisIterableDone = true;\n\n\t\t\t\tif (resolvingCount === 0) {\n\t\t\t\t\tif (!stopOnError && errors.length !== 0) {\n\t\t\t\t\t\treject(new AggregateError(errors));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(ret);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolvingCount++;\n\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst element = await nextItem.value;\n\t\t\t\t\tret[i] = await mapper(element, i);\n\t\t\t\t\tresolvingCount--;\n\t\t\t\t\tnext();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (stopOnError) {\n\t\t\t\t\t\tisRejected = true;\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors.push(error);\n\t\t\t\t\t\tresolvingCount--;\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})();\n\t\t};\n\n\t\tfor (let i = 0; i < concurrency; i++) {\n\t\t\tnext();\n\n\t\t\tif (isIterableDone) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n};\n"],"names":["extractPathRegex","pathRegex","homeDir","os","homedir","AggregateError","Error","[object Object]","errors","Array","isArray","TypeError","message","map","error","Object","assign","stack","replace","cleanInternalStack","options","pretty","split","filter","line","pathMatches","match","includes","test","trim","m","p1","join","String","string","count","indent","includeEmptyLines","regex","repeat","indentString","super","this","name","defineProperty","value","Symbol","iterator","_errors","async","iterable","mapper","concurrency","Infinity","stopOnError","Promise","resolve","reject","ret","isRejected","isIterableDone","resolvingCount","currentIndex","next","nextItem","i","done","length","element","push"],"mappings":"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"}