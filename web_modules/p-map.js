import{g as e}from"./common/_commonjsHelpers-d670773d.js";var r=e(Object.freeze({__proto__:null,default:{}}));const t=/\s+at.*(?:\(|\s)(.*)\)?/,n=/^(?:(?:(?:node|(?:internal\/[\w/]*|.*node_modules\/(?:babel-polyfill|pirates)\/.*)?\w+)\.js:\d+:\d+)|native)/,o=void 0===r.homedir?"":r.homedir();class s extends Error{constructor(e){if(!Array.isArray(e))throw new TypeError(`Expected input to be an Array, got ${typeof e}`);let r=(e=[...e].map(e=>e instanceof Error?e:null!==e&&"object"==typeof e?Object.assign(new Error(e.message),e):new Error(e))).map(e=>{return"string"==typeof e.stack?(e=>e.replace(/\s+at .*aggregate-error\/index.js:\d+:\d+\)?/g,""))((r=e.stack,s=Object.assign({pretty:!1},s),r.replace(/\\/g,"/").split("\n").filter(e=>{const r=e.match(t);if(null===r||!r[1])return!0;const o=r[1];return!o.includes(".app/Contents/Resources/electron.asar")&&!o.includes(".app/Contents/Resources/default_app.asar")&&!n.test(o)}).filter(e=>""!==e.trim()).map(e=>s.pretty?e.replace(t,(e,r)=>e.replace(r,r.replace(o,"~"))):e).join("\n"))):String(e);var r,s}).join("\n");r="\n"+((e,r=1,t)=>{if(t={indent:" ",includeEmptyLines:!1,...t},"string"!=typeof e)throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof e}\``);if("number"!=typeof r)throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof r}\``);if("string"!=typeof t.indent)throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof t.indent}\``);if(0===r)return e;const n=t.includeEmptyLines?/^/gm:/^(?!\s*$)/gm;return e.replace(n,t.indent.repeat(r))})(r,4),super(r),this.name="AggregateError",Object.defineProperty(this,"_errors",{value:e})}*[Symbol.iterator](){for(const e of this._errors)yield e}}var i=s;export default async(e,r,{concurrency:t=1/0,stopOnError:n=!0}={})=>new Promise((o,s)=>{if("function"!=typeof r)throw new TypeError("Mapper function is required");if(!("number"==typeof t&&t>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${t}\` (${typeof t})`);const a=[],p=[],c=e[Symbol.iterator]();let l=!1,f=!1,u=0,d=0;const y=()=>{if(l)return;const e=c.next(),t=d;if(d++,e.done)return f=!0,void(0===u&&(n||0===p.length?o(a):s(new i(p))));u++,(async()=>{try{const n=await e.value;a[t]=await r(n,t),u--,y()}catch(e){n?(l=!0,s(e)):(p.push(e),u--,y())}})()};for(let e=0;e<t&&(y(),!f);e++);});
//# sourceMappingURL=p-map.js.map
